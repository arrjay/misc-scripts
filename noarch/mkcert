#!/bin/bash

# make a key, make a csr, sign a cert. wrapper around openssl because
#  remembering is hard.

# Builtin defaults for certificate creation, read MKCERT_ env vars
_country=${MKCERT_COUNTRY-US}
_state=${MKCERT_STATE-Virginia}
_locality=${MKCERT_LOCALITY-Vienna}
_organization=${MKCERT_ORG-"Produxi Internetworks"}
_org_unit=${MKCERT_OU-"MKCert v1.0"}

# clear _ext_opts
_ext_opts=""

# unwind options
while getopts "c:s:l:o:u:h:n:" _opt; do
  case ${_opt} in
    c)
      _country=${OPTARG}
      ;;
    s)
      _state=${OPTARG}
      ;;
    l)
      _locality=${OPTARG}
      ;;
    o)
      _organization=${OPTARG}
      ;;
    u)
      _org_unit=${OPTARG}
      ;;
    h)
      _hostname=${OPTARG}
      ;;
    n)
      # this is a fun one...
      _alt_flag="yes"
      _altnames=${OPTARG}
  esac
done

# we set hostname, right?
if [ -z "$_hostname" ]; then echo "you need to supply -h HOSTNAME" && exit 1; fi

# make a temporary config, own it
umask 0022
_SSLCONF=`mktemp /tmp/mkcert.cnf.XXX`
export OPENSSL_CONF=${_SSLCONF}
# req, req_distinguished_name sections required for openssl to shut up
#                                                 but -subj overrides?
cat > ${_SSLCONF} << END_CONFIG
[ req ]
distinguished_name	= req_distinguished_name
req_extensions		= v3_req

[ req_distinguished_name ]
countryName		= ${_country}
state			= ${_state}
localityName		= ${_locality}
0.organizationName	= ${_organization}
organizationUnitName	= ${_org_unit}

[ v3_req ]
basicConstraints	= CA:FALSE
keyUsage		= nonRepudiation, digitalSignature, keyEncipherment
END_CONFIG

if [ "${_alt_flag}" = "yes" ]; then
# unwind/rewind the SANs
_sanString="DNS:"$_hostname
for name in $_altnames; do
  _sanString="${_sanString},DNS:${name}"
done

# append to CSR
cat >> ${_SSLCONF} << END_CONFIG
subjectAltName		= @alt_names

[ alt_names ]
END_CONFIG
echo "DNS.1		= ${_hostname}" >> ${_SSLCONF}
x=2
for name in $_altnames; do
  echo "DNS.${x}		= ${name}" >> ${_SSLCONF}
  x=`expr $x + 1`
done

# append to cert
_X509EXT=`mktemp /tmp/mkcert.cnf.XXX`
cat > ${_X509EXT} << END_CONFIG
subjectAltName		= ${_sanString}
END_CONFIG

# options to x509
_ext_opts="-extfile ${_X509EXT}"

fi

cat ${_SSLCONF}

# you shouldn't have to change these
keyopts="rsa:2048 -nodes"

# make a key/csr combo
openssl req -config ${_SSLCONF} -new -keyout ${_hostname}.key -newkey ${keyopts} -out ${_hostname}.csr -subj "/C=${_country}/ST=${_state}/L=${_locality}/O=${_organization}/OU=${_org_unit}/CN=${_hostname}"

# if that worked, sign the csr with the key
openssl x509 -req -days 366 -in ${_hostname}.csr -signkey ${_hostname}.key -out ${_hostname}.crt ${_ext_opts}

# clean up
rm ${_SSLCONF}
rm ${_X509EXT}
